services:

  krakend:
    image: devopsfaith/krakend:latest
    depends_on:
      - blogs
      - jaeger
      - prometheus
      - grafana
      - keycloak
      - rabbitmq
    ports:
      - 8080:8080
    volumes:
      - ./krakend.json:/etc/krakend/krakend.json
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/__health" ]
      interval: 30s
      timeout: 10s
      retries: 5

  jaeger:
    image: jaegertracing/all-in-one:1.40
    ports:
      - 16686:16686

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - ./grafana/datasources/:/etc/grafana/provisioning/datasources/
      - ./grafana/dashboards/:/etc/grafana/provisioning/dashboards/

  influxdb:
    image: influxdb:1.8.10
    environment:
      - INFLUXDB_DB=krakend
      - INFLUXDB_USER=krakend
      - INFLUXDB_USER_PASSWORD=krakend
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=supersecretpassword

  keycloak:
    image: quay.io/keycloak/keycloak:20.0.2
    ports:
      - 8081:8080
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./keycloak/realm.json:/opt/keycloak/data/import/realm.json

  blogs:
    image: 0damir1tugushev/exam-blog
    depends_on:
      mongo-blogs:
        condition: service_healthy
    environment:
      - CONNECTION_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo-blogs:27017/?authSource=admin
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 5
  mongo-blogs:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh admin -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 5

  tasks:
    image: tuguzt/service-exam-task
    depends_on:
      mongo-tasks:
        condition: service_healthy
    environment:
      - RUST_LOG=$RUST_LOG
      - DATABASE_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo-tasks:27017/?authSource=admin
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 5
  mongo-tasks:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh admin -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 5

  service-scraper:
    image: dannik7771/scraper
    container_name: service-scraper
    healthcheck:
      interval: 1m30s
      retries: 3
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8080
      timeout: 10s
  rabbitmq:
   image: rabbitmq:management
   ports:
     - "5672:5672"
     - "15672:15672"
   healthcheck:
     test: rabbitmq-diagnostics -q ping
     interval: 30s
     timeout: 30s
     retries: 3

  postservice:
    image: lolka123/postservice
    container_name: servicepost
    depends_on:
      - mongopost
    links:
      - mongopost
  mongopost:
    image: 'mongo'
    container_name: mongopost
    volumes:
      - /home/sinoed/data/db-post:/data/db
